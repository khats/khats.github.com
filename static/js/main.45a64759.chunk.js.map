{"version":3,"sources":["Desk/styles.module.css","Helper/styles.module.css","Controls/Autobot.jsx","Controls/Loose.jsx","Controls/Level-Selector.jsx","Controls/index.jsx","Cell/index.jsx","Desk/index.jsx","modules/commands.js","modules/realtime.js","Password-List/index.jsx","MinesCounter/index.jsx","Helper/index.jsx","App.jsx","index.jsx","Cell/styles.module.css"],"names":["module","exports","Autobot","props","onClick","startBot","Loose","Fragment","restartGame","LevelSelector","type","placeholder","onChange","changeLevel","value","level","startGame","Index","event","target","test","this","loose","React","PureComponent","displayName","Cell","open","i","j","setFlag","classes","classnames","styles","cell","safe","flag","mine","className","onContextMenu","Desk","row","matrix","desk","map","indexRow","key","indexCell","propType","PropTypes","arrayOf","number","x","y","Realtime","url","callback","connection","WebSocket","addEventListener","message","data","send","commands","PasswordList","passwords","password","btoa","MinesCounter","minesCount","ManualHelper","next","helpRequired","makeDecision","offsets","getSiblings","strict","mines","forEach","offset","length","parsed","isNaN","findElement","push","App","resolver","setState","connected","started","state","getMap","startsWith","split","filter","line","rowIndex","cellIndex","includes","createGame","openCell","openList","points","point","to_open","old_matrix","parseInt","exist_flags","real_mines","setupMap","should_update","autobot","every","Math","round","reduce","accum","maxflags","siblingFlags","Controls","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45a64759.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"desk\":\"styles_desk__DUIO6\",\"row\":\"styles_row__DtQBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makeDecision\":\"styles_makeDecision__LpYTW\"};","import React from \"react\";\r\nexport default function Autobot(props){\r\n    return <div>\r\n        <h3>Variant 1: Autobot(no user interaction):</h3>\r\n        <button onClick={props.startBot}>start</button>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nexport default function Loose(props){\r\n    return (<React.Fragment>\r\n        <h3>You lose</h3>\r\n        <button onClick={props.restartGame}>Restart</button>\r\n    </React.Fragment>)\r\n}\r\n","import React from \"react\";\r\nexport default function LevelSelector(props){\r\n    return <React.Fragment>\r\n        <h3>Variant 2: Partial user interaction:</h3>\r\n        <span>Select level:</span>\r\n        <input type=\"text\" placeholder={\"1,2,3,4 or other\"}\r\n               onChange={props.changeLevel}\r\n               value={props.level}/>\r\n        {props.level ?\r\n            <button onClick={props.startGame}>Start</button>\r\n            : null}\r\n    </React.Fragment>\r\n}\r\n","import React from \"react\";\r\nimport Autobot from \"./Autobot\";\r\nimport Loose from \"./Loose\";\r\nimport LevelSelector from \"./Level-Selector\";\r\n\r\nclass Index extends React.PureComponent {\r\n    static displayName = 'Controls';\r\n\r\n    changeLevel = (event) => {\r\n        const level = event.target.value;\r\n        if (/^[1-9]*$/.test(level)) {\r\n            this.props.changeLevel(level);\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    (\r\n                        <React.Fragment>\r\n                            <Autobot startBot={this.props.startBot}/>\r\n                            <hr/>\r\n                            {this.props.loose\r\n                                ? <Loose restartGame={this.props.restartGame}/>\r\n                                : <LevelSelector\r\n                                    changeLevel={this.changeLevel}\r\n                                    level={this.props.level ? this.props.level : ''}\r\n                                    startGame={this.props.startGame}/>}\r\n                        </React.Fragment>\r\n                    )}\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport styles from './styles.module.css';\r\nimport classnames from 'classnames';\r\n\r\nclass Cell extends React.PureComponent {\r\n    static displayName = 'Cell';\r\n\r\n    open = () => {\r\n        this.props.open(this.props.i, this.props.j);\r\n    };\r\n\r\n    setFlag = () => {\r\n        this.props.setFlag(this.props.i, this.props.j);\r\n    };\r\n\r\n    render() {\r\n        const classes = classnames({\r\n            [styles.cell]:true,\r\n            [styles.safe]: this.props.value >= 0,\r\n            [styles.flag]: this.props.value === -1,\r\n            [styles.mine]: this.props.value === -2\r\n        });\r\n        return <span className={classes} onClick={this.open} onContextMenu={this.setFlag}>\r\n                {this.props.value}\r\n        </span>\r\n    }\r\n}\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './styles.module.css';\r\nimport Cell from \"../Cell\";\r\n\r\nclass Desk extends React.PureComponent {\r\n    static displayName = 'Desk';\r\n\r\n    static propType = {\r\n        matrix: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number))\r\n    };\r\n\r\n    open = (cell, row) => {\r\n        this.props.open(row, cell);\r\n    };\r\n\r\n    setFlag = (cell, row) => {\r\n        this.props.setFlag(row, cell);\r\n    };\r\n\r\n    render() {\r\n        const matrix = this.props.matrix;\r\n        return (\r\n            <div className={styles.desk}>\r\n                {matrix.map((row, indexRow) =>\r\n                    <div key={indexRow} className={styles.row}>\r\n                        {row.map((cell, indexCell) =>\r\n                            <Cell value={cell} key={indexCell} i={indexRow} j={indexCell}\r\n                                  open={this.open}\r\n                                  setFlag={this.setFlag}/>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Desk;\r\n","export default {\r\n    CREATE_GAME: (level) => `new ${level}`,\r\n    GET_MAP: 'map',\r\n    OPEN_CELL: (x,y) => `open ${x} ${y}`\r\n}\r\n","import commands from './commands';\r\n\r\nclass Realtime {\r\n    constructor(url, callback) {\r\n        this.connection = new WebSocket(url);\r\n        this.connection.addEventListener('message', (message) => {\r\n            callback(message.data);\r\n        });\r\n        this.connection.addEventListener('open', () => {\r\n            callback('opened connection');\r\n        });\r\n    }\r\n\r\n    createGame(level) {\r\n        this.connection.send(commands.CREATE_GAME(level))\r\n    }\r\n\r\n    getMap() {\r\n        this.connection.send(commands.GET_MAP);\r\n    }\r\n\r\n    openCell(x, y) {\r\n        this.connection.send(commands.OPEN_CELL(x, y));\r\n    }\r\n}\r\n\r\nexport default Realtime;\r\n","import React from \"react\";\r\n\r\nexport default function PasswordList(props) {\r\n    return (\r\n        <div>\r\n            Passwords:\r\n            <ul>\r\n                {props.passwords.map(password =>\r\n                    <li key={btoa(password)}>{password}</li>\r\n                )}\r\n            </ul>\r\n        </div>)\r\n}\r\n","import React from 'react';\r\nexport default function MinesCounter(props){\r\n    return <div>\r\n        <span>Mines:</span><span>{props.minesCount}</span>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport styles from './styles.module.css';\r\n\r\nexport default function ManualHelper(props){\r\n    return <React.Fragment>\r\n        <button onClick={props.next}>Autostep</button>\r\n        {props.helpRequired\r\n            ? <h3 className={styles.makeDecision}>Open cell, please! (Can not make decision)</h3>\r\n            : null}\r\n    </React.Fragment>\r\n}\r\n","import React from 'react';\r\nimport Controls from \"./Controls\";\r\nimport Desk from './Desk';\r\nimport Realtime from './modules/realtime';\r\nimport PasswordList from './Password-List';\r\nimport MinesCounter from \"./MinesCounter\";\r\nimport ManualHelper from \"./Helper\";\r\n//PleaseNoMore\r\nconst offsets = [{\r\n    i: -1,\r\n    j: -1\r\n},\r\n    {\r\n        i: -1,\r\n        j: 0\r\n    },\r\n    {\r\n        i: -1,\r\n        j: 1\r\n    },\r\n    {\r\n        i: 0,\r\n        j: 1\r\n    },\r\n    {\r\n        i: 1,\r\n        j: 1\r\n    },\r\n    {\r\n        i: 1,\r\n        j: 0\r\n    },\r\n    {\r\n        i: 1,\r\n        j: -1\r\n    },\r\n    {\r\n        i: 0,\r\n        j: -1\r\n    }];\r\n\r\nfunction findElement(matrix, i, j, value, strict) {\r\n    if (i < 0 || j < 0 || i >= matrix.length || j >= matrix[i].length) {\r\n        return null;\r\n    }\r\n    let parsed = matrix[i][j];\r\n    if ((!value && isNaN(parsed)) || (!isNaN(parsed) && (strict ? parsed === value : parsed >= value))) {\r\n        return {\r\n            row: i,\r\n            cell: j\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction getSiblings(matrix, i, j, value, strict = true) {\r\n    let mines = [],\r\n        mine;\r\n    offsets.forEach(offset => {\r\n        mine = findElement(matrix, i + offset.i, j + offset.j, value, strict);\r\n        if (mine) {\r\n            mines.push(mine);\r\n        }\r\n    });\r\n\r\n    return mines;\r\n}\r\n\r\nfunction setupMap(old_matrix) {\r\n\r\n    let matrix = old_matrix.map(row => [...row]);\r\n    matrix.forEach((row, rowIndex) => {\r\n        return row.forEach((cell, cellIndex) => {\r\n            let parsed = parseInt(cell);\r\n            if (!isNaN(parsed) && parsed > -1) {\r\n                let new_flags = getSiblings(matrix, rowIndex, cellIndex);\r\n                new_flags.forEach(flag => {\r\n                    matrix[flag.row][flag.cell] = -1;\r\n                });\r\n                let exist_flags = getSiblings(matrix, rowIndex, cellIndex, -1),\r\n                    real_mines = getSiblings(matrix, rowIndex, cellIndex, -2);\r\n                if (exist_flags.length > 0 && (exist_flags.length + real_mines.length) === parsed) {\r\n                    exist_flags.forEach(flag => {\r\n                        //setupMine(matrix, flag.row, flag.cell);\r\n                        matrix[flag.row][flag.cell] = -2;\r\n                    });\r\n                }\r\n\r\n                if (real_mines.length > 0 && real_mines.length === parsed && exist_flags.length > 0) {\r\n                    exist_flags.forEach(flag => {\r\n                        matrix[flag.row][flag.cell] = -3;\r\n                    });\r\n                }\r\n            }\r\n        })\r\n    });\r\n    matrix.forEach((row, rowIndex) => {\r\n        return row.forEach((cell, cellIndex) => {\r\n            let parsed = parseInt(cell);\r\n            if (!isNaN(parsed) && parsed > -1) {\r\n                let exist_flags = getSiblings(matrix, rowIndex, cellIndex, -1),\r\n                    real_mines = getSiblings(matrix, rowIndex, cellIndex, -2);\r\n\r\n                if (real_mines.length > 0 && real_mines.length === parsed && exist_flags.length > 0) {\r\n                    exist_flags.forEach(flag => {\r\n                        matrix[flag.row][flag.cell] = -3;\r\n                    });\r\n                }\r\n            }\r\n        })\r\n    });\r\n    return matrix;\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n    static displayName = 'App';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            matrix: [],\r\n            connection: new Realtime('wss://hometask.eg1236.com/game1/', this.resolver),\r\n            level: null,\r\n            started: false,\r\n            loose: false,\r\n            helpRequired: true,\r\n            autobot: false,\r\n            passwords: [],\r\n            connected: false\r\n        };\r\n    }\r\n\r\n    resolver = (message) => {\r\n        if (message === 'opened connection') {\r\n            this.setState({connected: true});\r\n\r\n        } else if (message === 'new: OK') {\r\n            this.setState({started: true, matrix: [], loose: false, helpRequired: false}, () => {\r\n                this.state.connection.getMap();\r\n            });\r\n        } else if (message.startsWith('map:')) {\r\n            let matrix = message.split(':')[1].split('\\n').filter(line => line !== '').map(line => line.split(''));\r\n            if (this.state.matrix === matrix.length) {\r\n                matrix.forEach((row, rowIndex) => {\r\n                    row.forEach((cell, cellIndex) => {\r\n                        if (isNaN(cell)) {\r\n                            matrix[rowIndex][cellIndex] = this.state.matrix[rowIndex][cellIndex];\r\n                        }\r\n                    })\r\n                });\r\n            }\r\n            //matrix = setupMap(matrix);\r\n            this.setState({matrix: matrix, helpRequired: false});\r\n        } else if (message === 'open: You lose') {\r\n            this.setState({started: false, loose: true});\r\n        } else if (message === 'open: OK') {\r\n            //this.state.connection.getMap();\r\n        } else if (message.startsWith('open: You win')) {\r\n            if (!this.state.passwords.includes(message)) {\r\n                this.setState({\r\n                    passwords: [...this.state.passwords, message],\r\n                    level: this.state.level + 1,\r\n                    matrix: [],\r\n                    started: false\r\n                });\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    restartGame = () => {\r\n        this.setState({\r\n            matrix: [],\r\n            started: false,\r\n            loose: false,\r\n            helpRequired: false\r\n        }, () => {\r\n            this.startGame()\r\n        });\r\n    }\r\n\r\n    startGame = () => {\r\n        this.state.connection.createGame(this.state.level);\r\n    };\r\n    open = (cell, row) => {\r\n        this.state.connection.openCell(cell, row);\r\n        this.state.connection.getMap();\r\n    };\r\n    openList = (points) => {\r\n        points.forEach(point => {\r\n            this.state.connection.openCell(point.cell, point.row);\r\n        });\r\n        this.state.connection.getMap();\r\n    };\r\n    setFlag = (cell, row) => {\r\n        const matrix = this.state.matrix.map(row => [...row]);\r\n        matrix[cell][row] = -1;\r\n        this.setState({matrix});\r\n    };\r\n\r\n    changeLevel = (level) => {\r\n        this.setState({level: level});\r\n    };\r\n\r\n    next = (event) => {\r\n        let to_open = [];\r\n        this.state.matrix.forEach((row, rowIndex) => {\r\n            row.forEach((cell, cellIndex) => {\r\n                if (cell === -3) {\r\n                    to_open.push({row: rowIndex, cell: cellIndex});\r\n                }\r\n\r\n            });\r\n        });\r\n        if (to_open.length) {\r\n            this.openList(to_open);\r\n        } else {\r\n            let matrix = setupMap(this.state.matrix);\r\n            let should_update = false;\r\n            matrix.forEach((row, rowIndex) => {\r\n                row.forEach((cell, cellIndex) => {\r\n                    if (cell !== this.state.matrix[rowIndex][cellIndex]) {\r\n                        should_update = true;\r\n                    }\r\n                })\r\n            });\r\n\r\n            if (should_update) {\r\n                this.setState({matrix: matrix});\r\n                return;\r\n            }\r\n            if(this.state.autobot && matrix.every(row => row.every(cell => isNaN(cell)))){\r\n                this.open(Math.round(matrix[0].length / 2), Math.round(matrix.length / 2));\r\n                return;\r\n            }\r\n\r\n            if (!this.state.autobot) {\r\n                this.setState({helpRequired: true});\r\n                return;\r\n            }\r\n\r\n            if (this.state.matrix.reduce((accum, line) => {\r\n                return accum + line.filter(cell => isNaN(cell)).length;\r\n            }, 0) < (matrix.length * matrix[0].length) * 0.05) {\r\n                this.setState({autobot: false});\r\n                return;\r\n            }\r\n\r\n            let to_open = null;\r\n            let maxflags = 0;\r\n            for (let i = 0; i < matrix.length; i++) {\r\n                for (let j = 0; j < matrix[i].length; j++) {\r\n                    if (isNaN(matrix[i][j])) {\r\n                        let siblingFlags = getSiblings(matrix, i, j, -2, false);\r\n                        if (siblingFlags > maxflags) {\r\n                            maxflags = siblingFlags;\r\n                            to_open = {\r\n                                row: i,\r\n                                cell: j\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (to_open) {\r\n                this.open(to_open.cell, to_open.row);\r\n                return;\r\n            } for (let i = 0; i < matrix.length; i++) {\r\n                for (let j = 0; j < matrix[i].length; j++) {\r\n                    if (matrix[i][j] === -1) {\r\n                        to_open = {\r\n                            row: i,\r\n                            cell: j\r\n                        };\r\n                        break;\r\n                    }\r\n                }\r\n                if (to_open) {\r\n                    break;\r\n                }\r\n            }\r\n            if (to_open) {\r\n                this.open(to_open.cell, to_open.row);\r\n                return;\r\n            }\r\n\r\n            this.setState({helpRequired: true});\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    startBot = () => {\r\n        this.setState({autobot: true}, () => {\r\n            this.changeLevel(1);\r\n        });\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.autobot) {\r\n            if (this.state.loose) {\r\n                this.setState({matrix: [], started: false, loose: false});\r\n            } else if (this.state.level) {\r\n                if (this.state.matrix.length === 0 && !this.state.started && this.state.connected) {\r\n                    this.startGame();\r\n                }\r\n                if (this.state.matrix.length > 0 && this.state.started) {\r\n                    this.next(null);\r\n                }\r\n            }\r\n        } else {\r\n            if (this.state.started && this.state.matrix.length > 0 && !this.state.helpRequired) {\r\n                this.next(null);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const minesCount = this.state.matrix.reduce((accum, line) => {\r\n            return accum + line.filter(cell => cell === -2).length;\r\n        }, 0);\r\n        return (\r\n            <div className=\"App\">\r\n                <PasswordList passwords={this.state.passwords}/>\r\n                <hr/>\r\n                <Controls startGame={this.startGame}\r\n                          changeLevel={this.changeLevel}\r\n                          level={this.state.level}\r\n                          loose={this.state.loose}\r\n                          restartGame={this.restartGame}\r\n                          startBot={this.startBot}/>\r\n                <hr/>\r\n\r\n                {this.state.started\r\n                    ?\r\n                    <React.Fragment>\r\n                        <MinesCounter minesCount={minesCount}/>\r\n                        <ManualHelper helpRequired={this.state.helpRequired}/>\r\n                    </React.Fragment>\r\n                    : null}\r\n                <Desk matrix={this.state.matrix} open={this.open} setFlag={this.setFlag}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"styles_cell__XNJeH\",\"safe\":\"styles_safe__2yXuU\",\"flag\":\"styles_flag__1Y40j\",\"mine\":\"styles_mine__MLcNf\"};"],"sourceRoot":""}